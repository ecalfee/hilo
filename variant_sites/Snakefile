# pipeline to call SNPs
workdir: path_hilo
# note: working directory is hilo/ and all file inputs/outputs below are relative to that working directory

prefix_all = "HILO_MAIZE55"
#prefix_all = "TEST"

# list of combined sample bams
with open("samples/" + prefix_all + "_bams.list") as f:
    all_bams = f.read().splitlines()


# calculate depth of sequencing coverage for the combined sample, only including bases meeting minQ >20
rule calc_depth:
    input:
        bams = all_bams, # all input bams
        bais = [bam + ".bai" for bam in all_bams], # all input bam indexes
        bam_list = "samples/" + prefix_all + "_bams.list",
        regions = "data/refMaize/random_regions/N1000.L100.regions"
    output:
        "variant_sites/results/depthCov/N1000.L100.regions/" + prefix_all + ".Q20.depthGlobal"
    params:
        p = "bigmemm",
        out_prefix = "variant_sites/results/depthCov/N1000.L100.regions/" + prefix_all + ".Q20"
    shadow:
        "minimal"
    threads:
        4
    resources:
        time_min = lambda wildcards, attempt: attempt * 12 * 60,
        mem = 32
    shell:
        "echo $PWD && "
        "angsd -out {params.out_prefix} "
        "-rf {input.regions} "
        "-bam {input.bam_list} "
        "-remove_bads 1 -minMapQ 30 -minQ 20 "
        "-doCounts 1 -doDepth 1 -maxDepth 10000 "
	    "-checkBamHeaders 0"
# note: maize55 have different order of bams, but only after all the autosomes, so we ignore bam header differences in all angsd calls
# calculate total depth from the .Q20.depthGlobal file to use as input for 2x depth




# # to uncomment code below: cmd + /
# # define function to get list of input bams
# def get_all_bams(wildcards):
#     with open(path_hilo + expand("samples/{ALL}_bams.list", ALL = wildcards.ALL)) as f:
#         bams = f.read().splitlines()
#     return bams

# rule calc_depth2:
#     input:
#         bams = get_all_bams,
#         bam_list = path_hilo + "samples/{ALL}_bams.list",
#         regions = path_hilo + "data/refMaize/random_regions/N1000.L100.regions"
#     output:
#         "variant_sites/results/depthCov/N1000.L100.regions/{ALL}.Q20.depthGlobal"
#     params:
#         p = "bigmemm",
#         out_prefix = "variant_sites/results/depthCov/N1000.L100.regions/{wildcards.ALL}.Q20"
# #    conda:
# #        "../envs/environment.yaml"
#     shadow:
#         "shallow"
#     threads:
#         4
#     resources:
#         time_min = lambda wildcards, attempt: attempt * 12 * 60,
#         mem = 32
#     shell:
#         "echo $PWD && "
#         "angsd -out {params.out_prefix} "
#         "-rf {input.regions} "
#         "-bam {input.bam_list} "
#         "-remove_bads 1 -minMapQ 30 -minQ 20 "
#         "-doCounts 1 -doDepth 1 -maxDepth 10000 "
# 	    "-checkBamHeaders 0"
