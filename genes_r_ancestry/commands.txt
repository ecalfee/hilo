# Genomewide associations between ancestry, recombination and gene density (e.g. boxplots, lm)
# Testing hypothesis that minor ancestry goes down with higher gene density/cM (or simply lower recombination)

# calculating f4 for f4-stats
# denominator: parviglumis, allopatric maize, allopatric mexicana, tripsacum (all regions)
genes_r_ancestry$ sbatch --export="POP1=parv,POP2=allo.maize,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh
Submitted batch job 10480897 - RUNNING 4.25.19. BUT RERUNNING b/c f4 wrong pop order:
Submitted batch job 10480980 - COMPLETED 4.25.19

# I'll want to get this statistic ultimately in 1cM windows, but for now every SNP and a genomewide summary is fine
# admixture into sympatric maize
# numerator: parviglumis, sympatric maize, allopatric mexicana, tripsacum
genes_r_ancestry$ sbatch --export="POP1=parv,POP2=symp.maize,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh
Submitted batch job 10480892 - RUNNING 4.25.19
# oops I reran:
genes_r_ancestry$ sbatch --export="POP1=parv,POP2=symp.maize,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh
Submitted batch job 10480902- RERUNNING b/c f4 wrong pop order:
genes_r_ancestry$ sbatch -p med2 --export="POP1=parv,POP2=symp.maize,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh
Submitted batch job 10480995 - COMPLETED 4.25.19

# admixture into sympatric mexicana
# numerator: parviglumis, sympatric mexicana, allopatric mexicana, tripsacum
genes_r_ancestry$ sbatch -p med2 --export="POP1=parv,POP2=symp.mexicana,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh
Submitted batch job 10480966 - BUT RERUNNING b/c f4 wrong pop order:
Submitted batch job 10480996 - COMPLETED 4.25.19

# now calculating f4 for all individual maize and mexicana sympatric populations:
# numerator: parviglumis, X, allopatric mexicana, tripsacum
f4$ for i in $(tail -n 31 ../samples/pass2_pops/pop_labels.list); do sbatch -p med2 --export="POP1=parv,POP2=$i,POP3=allo.mexicana,POP4=trip,PREFIX=all" f4fromPopFreq.sh; done
Submitted batch jobs 10480934-64 - BUT RERUNNING b/c f4 wrong pop order:
Submitted batch job 10480999-1029 - COMPLETED 4.29.19

# NOTE: I changed the output folders from 'all' to 'pass2_alloMAIZE' to be more specific


# (1) Divide genome into 5 bins by recombination. check that f4 increases with recombination.
# I can use the 10kb fixed windows created with geneOverlapWindows10KB.sh:

# combine my f4 regions files into bed files (note bed files are 0 indexed, while angsd files are 1 indexed, and it only left-inclusive (start_pos, end_pos]: chr start_pos end_pos, so 1:3-3 in angsd woud be 1:2-3 in a bed file:
hilo/f4/results/f4/all/parv_symp.maize_allo.mexicana_trip$ for i in {0..425}; do zcat region_$i.f4.gz | tail -n +2 | awk '{print $1"\t"$2-1"\t"$2"\t"$3}'; done > f4.bed
# I also make an f4.bed file the same way for the denominator (parv_allo.maize_allo.mexicana_trip$ same command
# now I can use bedtools to summarise values for different genomic regions,
# starting with 10kb windows:
# denominator:
~/hilo/genes_r_ancestry/results/f4/all/parv_allo.maize_allo.mexicana_trip$ bedtools map -a ~/hilo/data/refMaize/windows_10kb/whole_genome.bed -b f4.bed -c 4 -o mean -g ~/hilo/data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths > f4_10kb.bed
# numerator:
~/hilo/genes_r_ancestry/results/f4/all/parv_symp.maize_allo.mexicana_trip$ same bedtools command
# also made f4.bed and f4_10kb.bed for sympatric mexicana as admixed pop
# note that windows with no estimates (presumably no segregating snps) have . as NA value

# 10kb estimates are very noisy -- some have only a handful of SNPs (or no SNPs) with data!
# so it's not working to take a mean f4 across windows. I get the # SNPs per window:
genes_r_ancestry/results/f4/pass2_alloMAIZE$ for f in symp.maize allo.maize symp.mexicana; do bedtools map -a ~/hilo/data/refMaize/windows_10kb/whole_genome.bed -b parv_"$f"_allo.mexicana_trip/f4.bed -c 4 -o count -g ~/hilo/data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths > parv_"$f"_allo.mexicana_trip/SNP_count_10kb.bed; done
# individual pops - make bed files and summarise f4 and n SNPs
f4/pass2_alloMAIZE$ for p in parv_pop*_allo.mexicana_trip; do for i in {0..425}; do zcat "$p"/region_"$i".f4.gz | tail -n +2 | awk '{print $1"\t"$2-1"\t"$2"\t"$3}'; done > "$p"/f4.bed;
bedtools map -a ~/hilo/data/refMaize/windows_10kb/whole_genome.bed -b "$p"/f4.bed -c 4 -o mean -g ~/hilo/data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths > "$p"/f4_10kb.bed;
bedtools map -a ~/hilo/data/refMaize/windows_10kb/whole_genome.bed -b "$p"/f4.bed -c 4 -o count -g ~/hilo/data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths > "$p"/SNP_count_10kb.bed; done

# I am testing for the expected pattern with recombination using the newest local ancestry calls:
# First I identify .1cM windows around SNPs with called ancestry (to get r and coding density)
genes_r_ancestry$ sbatch --export=PREFIX=pass2_alloMAIZE,CM_WINDOW=0.1 makeWindowsCM.sh
Submitted batch job 10513303 - COMPLETED (very fast)
# calculating gene overlap with windows:
genes_r_ancestry$ sbatch --export=PREFIX=pass2_alloMAIZE,CM_WINDOW=0.1 geneOverlapWindowsCM.sh
Submitted batch job 10513646 - RUNNING 4.30.19
# I already have output from geneOverlapWindows10KB.sh for gene density for all 10kb windows
# what I need to summarise is ancestry frequency for these same 10kb windows
# and I need to get local recombination rate for each position with ancestry_hmm output


# I don't see the f4 pattern I'd expect in maize ~ recombination rate:
Why is this?
(A) Low resolution - What percent of variant sites have tripsacum calls? Probably not why, > 20% sites also seen in Tripsacum
variant_sites/results/pass2_alloMAIZE$ zcat region_*.mafs.gz | wc -l
50189317
hilo/within_ancestry_diversity/results/allele_freq/pass2_alloMAIZE/trip$ zcat region_*.mafs.gz | wc -l
10955233
# would it make a difference if tripsacum had lower mapping rates in regions with low r?

(B) Mapping bias - Does maize with mexicana ancestry have lower read coverage in regions of the genome where we'd expect these populations to have lower mexicana ancestry, like regions of the genome with low recombination?
Use bedtools?

(C) Pattern isn't really there - Does something less sensitive to subtle biases than the hmm (or possibly the f4) also show reduced minor ancestry in regions of the genome with low recombination? What happens if I partition NGSAdmix by recombination rate regions?
I start by partitioning the bed files into low (1) to high (5) quantiles of recombination:
Made files using f4_plots.R, e.g. recomb_1.bed. Next I use bedtools to partition variant sites into these groups and then get GL files for these subsets.
data/refMaize/windows_10kb/recomb_1.bed
# note I used command line to fix from space to tab delimited (R code should also be changed now for future):
data/refMAIZE/windows_10kb$ for i in {1..5}; do sed 's/ /\t/g' recomb_"$i".space.bed > recomb_"$i".bed; done
# in command line I split the marker identifier 1_1245 into bed format 1 1244 1245, filter snps
# to find those that overlap with different recomb. window bins, and then print the GL's just for those bins
# (fast). note first line is just to keep the GL header and last part is gzipping again; parenthesis makes sure header is also gzipped
hilo/global_ancestry$ for i in {1..5}; do mkdir -p results/thinnedSNPs/pass2_alloMAIZE/recomb_$i; (zcat results/thinnedSNPs/pass2_alloMAIZE/test.beagle.gz | head -n 1; zcat results/thinnedSNPs/pass2_alloMAIZE/whole_genome.beagle.gz | awk '{split($1,a,"_"); print a[1]"\t"a[2]-1"\t"a[2]"\t"$0}' | tail -n +2 | bedtools intersect -a stdin -b ../data/refMaize/windows_10kb/recomb_"$i".bed -wa -sorted -g ../data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths | cut -f4-) | gzip > results/thinnedSNPs/pass2_alloMAIZE/recomb_$i/whole_genome.beagle.gz; done
# ! note there are 75x more SNPs in the highest recomb. bin (recomb_5: 75k) than the lowest (recomb_1: 1k)
# this is at least in part because I thin SNPs by .01cM distance which enriches for high recomb. regions.
# and differences in r can be up to 2 orders of magnitude across the genome. but it's not clear this explains all of it.
# I don't know how much SNP density varies across recomb. bin.
# running NGSadmix on these SNP subsets, keeping in mind a lot higher uncertainty for low recomb bins.
(see global_ancestry/results directory for output)
global_ancestry$ sbatch --export=PREFIX="pass2_alloMAIZE/recomb_1" --array=2 runNGSadmix.sh
Submitted batch job 11215774 # COMPLETED
global_ancestry$ for i in {2..5}; do sbatch --export=PREFIX="pass2_alloMAIZE/recomb_$i" --array=2 runNGSadmix.sh; done
Submitted batch job 11215775-8 # COMPLETED 6.2.19

# trying again but getting equal number of SNPs per r bin, even if they aren't in low LD
# get 100k SNPs in each recombination bin:
# or alternatively, get ~1% of SNPs in each bin by sampling reads with .01 probability
(i) get 1% of SNPs into a whole_genome_1percent.gz file
variant_sites/results/pass2_alloMAIZE$ (zcat region_0.beagle.gz | head -n 1; for i in {0..425}; \
do zcat region_$i.beagle.gz | tail -n +2; done | \
awk 'BEGIN {srand(25)} !/^$/ { if (rand() <= .01) print $0}') | gzip > whole_genome_1percent.beagle.gz
# note: seed is 25 for reproducibility. takes a few minutes. and it's an estimated ~1%
(ii) subsample with bedtools reads that overlap different recombination bins
global_ancestry$ for i in {1..5}; do mkdir -p results/thinnedSNPs/pass2_alloMAIZE/recomb_"$i"_1percent; \
(zcat ../variant_sites/results/pass2_alloMAIZE/whole_genome_1percent.beagle.gz | head -n 1; \
zcat ../variant_sites/results/pass2_alloMAIZE/whole_genome_1percent.beagle.gz | \
awk '{split($1,a,"_"); print a[1]"\t"a[2]-1"\t"a[2]"\t"$0}' | tail -n +2 | \
bedtools intersect -a stdin -b ../data/refMaize/windows_10kb/recomb_"$i".bed -wa -sorted \
-g ../data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths | cut -f4-) | \
gzip > results/thinnedSNPs/pass2_alloMAIZE/recomb_"$i"_1percent/whole_genome.beagle.gz; done
# not perfectly even # SNPs per group, but I can start with this:
global_ancestry$ for i in {1..5}; do zcat results/thinnedSNPs/pass2_alloMAIZE/recomb_"$i"_1percent/whole_genome.beagle.gz | wc -l; done
106328
112024
100307
92057
91577
# e.g. I could take 1 in every 100 SNPs instead of a random subsample
(iii) run NGSAdmix on these snp subsets
global_ancestry$ for i in {1..5}; do sbatch --export=PREFIX=pass2_alloMAIZE/recomb_"$i"_1percent --array=2 runNGSadmix.sh; done
Submitted batch job 11268341-5 RUNNING 6.9.19

(D) SNP choice or subtle ascertainment bias (?). I did not include tripsacum or parviglumis when I ascertained SNPs .. is this a problem?

(E) f4 is being affected by admixture between parviglumis and teosinte that is uneven across the genome

(F) Sampling noise -- What does a block bootstrap say about certainty of these estimates? I could bootstrap by chromosome possibly.
# is the original result with local ancestry robust to bootstrapping?

(G) Error from the recombination map -- is 10kb too wide? is the original results robust to excluding areas towards the telomeres on chromosome edges where recombination is poorly estimated?


##### Bootstrapping uncertainty around NGSAdmix global ancestry ~ recombination bin results
# i. used R script to divide the whole genome into 1cM and 0.2cM bins, and assign recombination quintiles to each bin
define_bootstrap_windows_from_map.R
This extends the map over any gaps outside the map, using linear interpolation (R approx) and extending the last recombination rate to the end of chromosome
# then made individual bed files for each recombination window:
# 1 cM windows
genes_r_ancestry/results$ for i in $(cut -f4 map_pos_1cM_windows.txt | tail -n +2); do grep -w $i map_pos_1cM_windows.txt > windows_1cM/$i.bed; done
e.g. results/windows_1cM/W10.bed
# 0.2 cM windows
genes_r_ancestry/results$ for i in $(cut -f4 map_pos_0.2cM_windows.txt | tail -n +2); do grep -w $i map_pos_0.2cM_windows.txt > windows_0.2cM/$i.bed; done
# ii. took every 100th SNP from pass2_alloMAIZE and pass2_alloMAIZE_PalmarChico;
# saved in results/global_ancestry/$PREFIX/prunedby100/whole_genome.beagle.gz
# iii. used bedtools to extract overlap between SNPs and regions
To accomplish this, I use an awk split file; first mapping the window label onto the GL line,
# then sending lines into each window-named file based on their 1cM window label
genes_r_ancestry$ zcat ../global_ancestry/results/thinnedSNPs/pass2_alloMAIZE_PalmarChico/prunedBy100/whole_genome.beagle.gz | \
awk '{split($1,a,"_"); print a[1]"\t"a[2]-1"\t"a[2]"\t"$0}' | tail -n +2 | \
bedtools map -a stdin -b results/map_pos_1cM_windows.txt -c 4 -o collapse -sorted \
-g ../data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths | cut -f4- | \
awk '{print > "results/GL_1cM/pass2_alloMAIZE_PalmarChico/"$NF".txt"}'
# this is MUCH faster
# these windows have as many as > 1000 SNPs and as few as 1 SNP
genes_r_ancestry$ wc -l results/GL_1cM/pass2_alloMAIZE_PalmarChico/*.txt
# After I will gzip and remove that last field (the window name)
hilo/genes_r_ancestry$ for i in $(cut -f4 results/map_pos_1cM_windows.txt | tail -n +2); \
do awk '{NF--; print $0}' results/GL_1cM/pass2_alloMAIZE_PalmarChico/$i.txt | \
gzip > results/GL_1cM/pass2_alloMAIZE_PalmarChico/$i.beagle.gz; done
# note: one window must not have any SNPs so that file is empty: results/GL_1cM/pass2_alloMAIZE_PalmarChico/W382.beagle.gz:
awk: fatal: cannot open file `results/GL_1cM/pass2_alloMAIZE_PalmarChico/W382.txt' for reading (No such file or directory)

# now make resample windows for my bootstraps:
bootstrap/windows_1cM/r5_recomb1/boot1.list # made using interactive R script define_bootstrap_windows_from_map.R
bootstrap/windows_1cM/r5_recomb1/pass2_alloMAIZE_PalmarChico/boot1.beagle.gz (with header)
for r in 1; do for b in {1..2}; \
do (zcat ../global_ancestry/results/thinnedSNPs/pass2_alloMAIZE_PalmarChico/prunedBy100/whole_genome.beagle.gz | head -n 1; \
for w in $(cat results/bootstrap/windows_1cM/r5_recomb$r/boot$b.list); \
do zcat results/GL_1cM/pass2_alloMAIZE_PalmarChico/$w.beagle.gz; \
done) | gzip > results/bootstrap/windows_1cM/r5_recomb$r/pass2_alloMAIZE_PalmarChico/boot$b.beagle.gz; done; done
# This is pretty slow, so I put it into a script:
genes_r_ancestry$ sbatch --array=1-100 --export=PREFIX=pass2_alloMAIZE_PalmarChico,r_bins=5,prunedBy=100,WIND=1cM makeBootstrapGLFiles.sh


# TO DO:
# (2) Compare NGSAdmix mean admixture proportions to f4-ratio statistics genomewide results for each population.
# (3) Divide genome into .01cM fixed windows. summarise mean f4 for each window.
