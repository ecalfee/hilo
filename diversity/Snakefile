## diversity/Snakefile: pipeline to get pi and Fst estimates

# note: working directory is hilo/ and all file inputs/outputs below are relative to that working directory

## make_fasta: makes ancestral fasta from tripsacum using concensus (most frequent) base
rule make_fasta:
    input:
        bam = "filtered_bams/results/SRR7758238/TRIP.sort.dedup.baq.bam",
        bai = "filtered_bams/results/SRR7758238/TRIP.sort.dedup.baq.bam.bai"
    output:
        fasta = trip_anc
    params:
        p = "med2",
        out_prefix = "filtered_bams/results/SRR7758238/TRIP"
    shadow:
        "minimal"
    conda:
        "../envs/environment.yaml"
    resources:
        time_min = 4*60,
        mem = lambda wildcards, attempt: attempt * 8 + 16
    shell:
        "angsd -out {params.out_prefix} "
        "-i {input.bam} "
        "-doFasta 2 "
        "-remove_bads 1 -minMapQ 30 -minQ 20 "
        "-doCounts 1 "

## estimate_saf_pop: estimate site allele frequency likelihoods using ANGSD for a population
rule estimate_saf_pop: # TEST WITH SMALL REGION!
    input:
        anc = "filtered_bams/results/SRR7758238/TRIP.fa.gz",
        bam_list = "local_ancestry/results/ancestry_hmm/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/bams/{POP}_bams.list",
        complete = "local_ancestry/results/ancestry_hmm/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/bams/{POP}.completed" # has bams
    output:
        saf_idx = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.saf.idx", # ALL or HOMOZYG/maize. maybe start with HOMOZYG/mexicana
        saf_gz = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.saf.gz"
    params:
        p = "med2",
        out_prefix = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small"
    conda:
        "../envs/environment.yaml"
    threads:
        6
    resources:
        time_min = 48*60,
        mem = lambda wildcards, attempt: attempt * 8 + 16
    shell:
        "angsd -out {params.out_prefix} "
        "-r 1:1000000-1500000 "
        "-doSaf 1 -anc {input.anc} "
        "-GL 1 "
        "-P {threads} "
        "-bam {input.bam_list} "
        "-remove_bads 1 -minMapQ 30 -minQ 20 "

## estimate_sfs: estimates site frequency spectrum (sfs) by maximum likelihood in ANGSD
rule estimate_sfs:
    input:
        saf = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.saf.idx"
    output:
        sfs = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.sfs"
    params:
        p = "med2"
    shadow:
        "minimal"
    conda:
        "../envs/environment.yaml"
    threads:
        6
    resources:
        time_min = 48*60,
        mem = lambda wildcards, attempt: attempt * 8 + 16
    shell:
        "realSFS {input.saf} -P {threads} > {output.sfs}"

## calc_thetas: calculates thetas for each site from saf and sfs in ANGSD
rule calc_thetas:
    input:
        saf = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.saf.gz",
        sfs = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.sfs"
    output:
        gz = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.thetas.gz",
        idx = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small.thetas.idx"
    params:
        p = "med2",
        out_prefix = "diversity/results/pi/" + prefix_all + "/Ne{Ne}_{YESNO}Boot/HOMOZYG/{ZEA}/{POP}.small"
    shadow:
        "minimal"
    conda:
        "../envs/environment.yaml"
    resources:
        time_min = 48*60,
        mem = lambda wildcards, attempt: attempt * 8 + 16
    shell:
        "realSFS saf2theta {input.saf} -sfs {input.sfs} -outname {params.out_prefix}"
